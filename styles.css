* {
  box-sizing: border-box;
}

html {
  scroll-behavior: smooth;
}

body {
  padding: 0;
  margin: 0;
  font-family: system-ui, sans-serif;
  color: black;
  background-color: white;
}

/* nav {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  padding: 0.5rem;
  gap: 0.5rem;
  border-bottom: solid 1px #aaa;
  background-color: #eee;
}

nav a {
  display: inline-block;
  min-width: 9rem;
  padding: 0.5rem;
  border-radius: 0.2rem;
  border: solid 1px #aaa;
  text-align: center;
  text-decoration: none;
  color: #555;
}

nav a[aria-current='page'] {
  color: #000;
  background-color: #d4d4d4;
} */

main {
  padding: 1rem;
}

h1 {
  font-weight: bold;
  font-size: 1.5rem;
}
/* TOP NAVIGATION */
.navbar {
  width: 100vw;
  height: 60px;
  display: flex;
  background-color: black;
  padding: 0 30px;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  z-index: 3;
  /* jika ingin memakai position sticky atau fixed jangan memakai header di html */
  position: sticky;
  top: 0;
  left: 0;
}

.navbar .brand {
  margin: 0;
  color: white;
  user-select: none;
}

.menu a {
  text-decoration: none;
  color: white;
  margin-left: 10px;
}

.menu a:hover {
  color: orange;
}
/* END TOP NAVIGATION */

/* PAGE NAVIGATION */
.page_navigation {
  padding: 0;
  height: 40px;
  background-color: orange;
  display: flex;
  justify-content: center;
  align-items: center;
  position: sticky;
  z-index: 1;
  /* Fungsi dari propertis GAP yang satu ini adalah untuk memberikan jarak antar kolom yang telah kita bagi dengan fungsi column-count, perlu diingat, column-gap hanya berfungsi untuk colom yang dibagi dengan fungsi column-count. */
  gap: 10px;
}

.page_navigation a {
  text-decoration: none;
  color: white;
}

.page_navigation a:hover {
  color: black;
}
/* END PAGE NAVIGATION */

/* CONTENT */
section {
  padding: 20px 0px;
}

pre {
  font-weight: 900;
}

.flex > div {
  width: 50px;
  height: 50px;
  background-color: gray;
  color: white;
  text-align: center;
}

.flex {
  display: flex;
  border: 1px solid black;
  height: 100px;
  gap: 8px;
  padding: 8px;
}

.flex_row {
  flex-direction: row;
}

.flex_column {
  flex-direction: column;
}

.flex_row_reverse {
  flex-direction: row-reverse;
}

.flex_column_reverse {
  flex-direction: column-reverse;
}
/* END CONTENT */

/* WRAP FLEX */
.wrap {
  /* fungsi dari wrap adalah ketika isi sudah melebihi batas maka box akan turun kebawah */
  flex-wrap: wrap;
}

.no_wrap {
  flex-wrap: nowrap;
}

.wrap_reverse {
  flex-wrap: wrap-reverse;
}
/* END WRAP FLEX */

/* Justify Content Flex */
.justify_start {
  justify-content: flex-start;
}

.justify_center {
  justify-content: center;
}

.justify_end {
  justify-content: flex-end;
}

.justify_space_around {
  justify-content: space-around;
}

.justify_space_between {
  justify-content: space-between;
}

.justify_space_evenly{
  justify-content: space-evenly;
}
/* END Justify Content flex */

/* Align Item */
.align_start{
  align-items: flex-start;
}

.align_center{
  align-items: center;
}
/* END Align Item */
